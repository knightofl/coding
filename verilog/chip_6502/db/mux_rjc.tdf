--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="Cyclone V" IGNORE_CASCADE_BUFFERS="OFF" LPM_SIZE=3 LPM_WIDTH=1 LPM_WIDTHS=2 data result sel
--VERSION_BEGIN 22.1 cbx_lpm_mux 2022:10:25:15:32:10:SC cbx_mgl 2022:10:25:15:42:35:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 2 
SUBDESIGN mux_rjc
( 
	data[2..0]	:	input;
	result[0..0]	:	output;
	sel[1..0]	:	input;
) 
VARIABLE 
	data0_wire[0..0]	: WIRE;
	data1_wire[0..0]	: WIRE;
	data2_wire[0..0]	: WIRE;
	result_node[0..0]	: WIRE;

BEGIN 
	data0_wire[] = (data[0..0] & (! sel[0..0]));
	data1_wire[] = (data[1..1] & sel[0..0]);
	data2_wire[] = (data[2..2] & sel[1..1]);
	result[] = result_node[];
	result_node[] = (((data0_wire[] # data1_wire[]) & (! sel[1..1])) # data2_wire[]);
END;
--VALID FILE
